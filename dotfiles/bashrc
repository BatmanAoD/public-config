################################################################################
# File:             .bashrc
# Description:      Bash shell environment file; should be target of symlink
#                       ~/.bashrc
################################################################################

# TODO: figure out a way to add auto-updating version info (using git?)

# If not in an interactive shell, we don't want any custom config stuff.
if echo "$-" | grep -v i > /dev/null; then
    return
fi

# Permit explicitly skipping all our Bash customization
# (set SKIP_CUSTOM_CFG to `true`)
if [[ -n "$SKIP_CUSTOM_CFG" ]] && $SKIP_CUSTOM_CFG; then
    return
fi

# Set the default umask
umask 002

# Print a message
# TODO include version info?
echo -e "$(tput setaf 2)-> bashrc$(tput sgr0)"

# Needed to find additional rcfiles
shopt -s extglob

# DO NOT 'readlink' here--that will point to 'bashrc' in public-config!
BASHRC_PATH="${BASH_SOURCE[0]}"

cfg_HOME="$(dirname "${BASHRC_PATH}")"
bashfiles="${cfg_HOME}/.bash.d"

# inspired by: https://www.turnkeylinux.org/blog/generic-shell-hooks
load_scripts()
{
    if [[ $# -eq 0 ]]; then
        dir="$bashfiles"
    else
        dir="$1"
    fi
    # Skip everything with a dot in the filename, except for the bootstrap and
    # rcbase files
    # TODO: how do we ensure that the bootstrap comes before rcbase?
    # (glob isn't alphabetical, is it?)
    for bashfile in "${dir}"/source_first.* "${dir}"/!(*.*); do

        # skip non-executable snippets
        [[ -x "$bashfile" ]] || continue

        echo "Sourcing '$bashfile'"
        . "$bashfile"
    done
}

load_scripts
load_scripts ~/private-config/bash.d

# This is here, rather than in .bash_aliases, due to how it determines the
# bashrc path.
# `extraconfigcmds` is a set of commands used to restore any "additional" setup
# that was in place before the reload. I'm not sure why the `eval` is
# necessary.
# TODO on repeated 'reload'ing, it appears that 'extraconfigcmds' grows
# geometrically. Fix this.
# TODO in Windows, can we also reload system environment variables? (`cmd`
# offers `refreshenv`, apparently, but we can't call that in Bash.)
alias reload="unalias -a ; source \"${BASHRC_PATH}\" ; eval \${extraconfigcmds}"

# 'say' is expected to be defined in one of the files sourced above.
say -n green "Primary local account: "
say yellow "${primary_local_account}"
if $id_is_known; then
    say cyan "You are currently using your primary account."
else
    say -n cyan "You are currently using account: "
    say yellow "$(whoami)"
fi

# Print a message
say green "<- bashrc"

# XXX set up fzf without messing up `hash`
# [ -f ~/.fzf.bash ] && source ~/.fzf.bash

          # Adding wsl-open as a browser for Bash for Windows
          if [[ $(uname -r) =~ (m|M)icrosoft ]]; then
            if [[ -z $BROWSER ]]; then
              export BROWSER=wsl-open
            else
              export BROWSER=$BROWSER:wsl-open
            fi
          fi
          
