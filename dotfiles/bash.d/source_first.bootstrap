#!/bin/bash
# The shebang is just to ensure that Vim knows how to highlight this file.

# Functions and other setup used by other public-config scripts, *including*
# `install`, *and* sourced by `.bashrc`.

# Using `-n` b/c `-v` is not supported yet in Oil
if [[ -n "${WINDIR+x}" ]]; then
    WINDOWS=true
    # Windows linking command based on http://stackoverflow.com/a/25394801/1858225
    # Ideally, in standard bash setup on Windows, this would be an alias for
    # `ln` that uses the `/h` flag if `-s` is not given as an argument.
    win_symlink() {
        if [[ $# -ne 2 ]]; then
            echo "ERROR: 'win_symlink' requires *two* arguments!" >&2
            # Currently, we *exit* with *error*...because this is a script bug.
            exit 1
        fi
        target="$(cygpath -w "${1}")"
        new_link="$(cygpath -w "${2}")"
        echo "Making symlink: ${new_link} -> ${target}"
        # Windows needs to be told if it's a directory or not. Infer that.
        # Cygpath should already have performed the directory-separator conversion.
        if [[ -d "$target" ]]; then
            cmd <<< "mklink /D \"$new_link\" \"$target\"" > /dev/null
        else
            cmd <<< "mklink \"$new_link\" \"$target\"" > /dev/null
        fi
    }
else
    WINDOWS=false
fi

OS_NAME="$(uname -s)"
LINUX_ANY=false
MAC_OSX=false
if [[ Linux == "$OS_NAME" ]]; then
    LINUX_ANY=true
elif [[ Darwin == "$OS_NAME" ]]; then
    MAC_OSX=true
fi

# Not Windows, not remote, not virtual
check_if_native_linux()
{
    LINUX_NATIVE=$LINUX_ANY;
    $LINUX_NATIVE || return;
    # Are we SSH-ing in?
    grep -qw 'SSH_CLIENT\|SSH_TTY' <(env) && LINUX_NATIVE=false && return;
    # Is this a VM?
    grep -qw hypervisor /proc/cpuinfo && LINUX_NATIVE=false && return;
    # Is it the Linux Subsystem on Windows?
    $WSL && LINUX_NATIVE=false && return;
    # Is Xmodmap usage explicitly disabled? (True for TightVNC connection)
    # TODO any way to check for VNC or RDP protocol automatically?
    test -n "$XKL_XMODMAP_DISABLE" && LINUX_NATIVE=false && return;
}

check_if_native_linux
