# Note: for reference, current Nu config on MacOS is here:
# /Users/kstrand/Library/Application Support/nushell/config.nu

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

[ -f ~/.asdf/asdf.sh ] && source ~/.asdf/asdf.sh
[ -f ~/.asdf/completions/asdf.bash ] && source ~/.asdf/completions/asdf.bash

if hash carapace 2>/dev/null; then
    source <(carapace _carapace)
    export CARAPACE_MATCH=CASE_INSENSITIVE
fi

# TODO: `atuin` recommends ble.sh, a readline in Bash.
# ... but `ble.sh` apparently doesn't respect .inputrc, so it's frustrating to use.
# There were some other oddities I found while trying to use atuin in Bash.
# eval "$(atuin init bash)"

if hash zoxide 2>/dev/null; then
    eval "$(zoxide init bash)"
    # replace `cd` with my functions
    __zoxide_cd() {
        godir "$@"
    }
    function __zoxide_z() {
        # shellcheck disable=SC2199
        if [[ $# -eq 0 ]]; then
            godir ~
        elif [[ $# -eq 1 && $1 == '-' ]]; then
            back
        elif [[ $# -eq 1 && -d $1 ]]; then
            godir "$1"
        elif [[ ${@: -1} == "${__zoxide_z_prefix}"?* ]]; then
            # shellcheck disable=SC2124
            \builtin local result="${@: -1}"
            godir "${result:${#__zoxide_z_prefix}}"
        else
            \builtin local result
            # shellcheck disable=SC2312
            result="$(\command zoxide query --exclude "$(__zoxide_pwd)" -- "$@")" &&
                godir "${result}"
        fi
    }
    alias cd=z
fi

if hash eza 2>/dev/null; then
    alias ls=eza
fi

if hash sccache 2>/dev/null; then
    export RUSTC_WRAPPER=sccache
fi
