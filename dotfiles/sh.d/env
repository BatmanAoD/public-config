#!/bin/sh

# This should be POSIX so it works with a wide variety of shells. It is
# designed simply to set up the PATH variable.

# Common path setup:
# OS X
if [ -r /usr/libexec/path_helper ]; then
    # Not sure why this isn't done by default for non-login shells on OS X.
    eval `/usr/libexec/path_helper`
fi
# Rust (except on Windows)
if [ -e "$HOME/.cargo/env" ]; then
    . "$HOME/.cargo/env"
fi

# Ensure particular dirs are on $PATH if they exist.
# Logic to ensure path is only added *once* is taken from
# http://superuser.com/a/39995/199803
# For more PATH-editing convenience functions:
# http://superuser.com/a/1001014/199803
ensure_on_path () {
    save_paths="`mktemp`"
    hash -l | grep -v 'hash table empty' > "$save_paths"
    if [[ -d "$1" ]] && [[ ":$PATH:" != *":$1:"* ]]; then
        export PATH="${PATH:+"$PATH:"}$1"
    fi
    . "$save_paths"
    rm "$save_paths"
}

ensure_on_path_if_exists () {
    if [ -d "$1" ]; then
        ensure_on_path "$1"
    fi
}

ensure_on_path_if_exists /usr/local/go/bin
if hash go 2>/dev/null; then
    if [ -d "$HOME"/workspace/go ]; then
        export GOPATH="$HOME"/workspace/go
    else 
        export GOPATH="`go env GOPATH`"
    fi
    mkdir -p "$GOPATH/bin"
    ensure_on_path "$GOPATH"/bin
fi

ensure_on_path_if_exists "${HOME}/bin"

# For Yarn
ensure_on_path_if_exists "${HOME}/.yarn/bin"
ensure_on_path_if_exists "${HOME}/.config/yarn/global/node_modules/.bin"

# TODO other possible brew paths?
ensure_on_path_if_exists "/home/linuxbrew/.linuxbrew/bin"

# pip (and maybe others?) use this
ensure_on_path_if_exists "${HOME}/.local/bin"

# fluvio
ensure_on_path_if_exists "${HOME}/.fluvio/bin"

### other env stuff
# TODO consider porting over the Bash logic, instead
export EDITOR=vi
