#!/bin/bash

cd ~

shopt -s nullglob

for prog in bash input gdb irb vim zsh git ack ycm; do
    echo Installing rc files for ${prog}
    for file in ~/public-config/${prog}* ~/private-config/${prog}*; do
        if [[ -d ${file} ]]; then continue; fi
        rcname=".$(basename ${file})"
        if [[ -h ${rcname} ]]; then rm ${rcname}; fi
        if [[ -e ${rcname} ]]; then
            echo "ERROR: Can't overwrite non-symlink file: ${rcname}" >&2
        else
            ln -s ${file} ${rcname}
        fi
    done
done

# Use .gitignore globally
git config --global core.excludesfile ~/.gitignore

mkdir -p ~/bin
cd ~/bin
for prog in ~/public-config/bin/*; do
    basename=$(basename ${prog})
    if [[ ! -e ${basename} ]]; then
        echo Installing ~/bin/${basename}
        ln -s ${prog}
    else
        echo ${basename} already installed
    fi
done

# Linux-specific
linux_specific=~/public-config/OS_specific/Linux

# Install Xmodmap
if [[ ! -e ~/.Xmodmap ]]; then
    echo "Installin Xmodmap"
    ln -s ${linux_specific}/Xmodmap ~/.Xmodmap
else
    echo "Xmodmap already exists; not overwriting"
fi

# Install .i3 config
mkdir -p ~/.i3
cd ~/.i3
if [[ ! -e config ]]; then
    echo Installing i3 config
    ln -s "${linux_specific}/i3_config"
    mv i3_config config
else
    echo i3 config already installed
fi

##############################################################################
##############################################################################
# CREATE SANDBOX DIRECTORY
##############################################################################
##############################################################################
# XXX TODO
# * Sandbox setup with makefile, inspired by http://stackoverflow.com/a/32485029/1858225
# * To check whether c++14, etc is supported:
# g++ -std=c++14 2>&1 | grep -q 'unrecognized command line'

##############################################################################
##############################################################################
# INSTALL 3RD-PARTY TOOLS
##############################################################################
##############################################################################

if [[ $1 != "--tools" ]]; then
    exit
fi

. ~/.bashrc

##############################################################################
# Install Vundle
vundle_bundle=~/.vim/bundle/Vundle.vim
if [[ ! -a ${vundle_bundle} ]]; then
    echo Installing Vundle plugins
    git clone https://github.com/gmarik/Vundle.vim.git ${vundle_bundle}
    vim "+BundleInstall" "+qa"
fi

# Install dev tools (Debian-based only)
# TODO: other package managers
if hash apt-get 2>/dev/null; then
    installusingapt=true
else
    installusingapt=false
fi

havetoolchain=false
if hash g++ 2>/dev/null; then
    havetoolchain=true;
else
    if hash clang++ 2>/dev/null; then
        havetoolchain=true;
    else
        if $installusingapt; then
            echo Installing build-essential using apt
            sudo apt-get install build-essential
            if [[ $? -eq 0 ]]; then
                havetoolchain=true
            fi
        fi
    fi
fi

havecmake=false
if hash cmake 2>/dev/null; then
    havecmake=true;
else
    if installusingapt; then
        echo Installing cmake using apt
        sudo apt-get install cmake
        if [[ $? -eq 0 ]]; then
            havecmake=true
        fi
    fi
fi

# Install sshrc
if hash sshrc 2>/dev/null; then
    echo Installing sshrc
    wget https://raw.githubusercontent.com/Russell91/sshrc/master/sshrc &&
        chmod +x sshrc &&
        sudo mv sshrc ${HOME}/bin
fi

# TODO: install rust & racer? complications:
# * From source: /opt vs ${toolsbld}
# * If Rust is NOT installed from src, Racer won't work

# TODO: install ack? (`ack-grep` in most or all Debian-based package managers,
# but I'm not sure how universal that is...)

# Install stderred
skipstderred=false
if ${CYGWIN}; then
    echo "Cygwin var is ${CYGWIN}"
    echo "On Cygwin; not installing stderred."
    skipstderred=true
fi
if ! $havetoolchain; then
    echo "No toolchain installed; not installing stderred."
    skipstderred=true
fi
if ! $havecmake; then
    echo "No cmake installed; not installing stderred."
    skipstderred=true
fi

if ! $skipstderred; then
    if [[ ! -d ${stderred_path} ]]; then
        echo Installing stderred
        cd $(dirname ${stderred_path})
        git clone git://github.com/sickill/stderred.git
        cd stderred
        make
    fi
fi
